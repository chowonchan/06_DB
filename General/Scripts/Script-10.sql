INSERT INTO "MEMBER"
VALUES(SEQ_MEMBER_NO.NEXTVAL,'member','pass01!', 
			'member01@kh.or.kr',
			'닉네임1','조원찬1',  NULL, DEFAULT, DEFAULT, NULL
			, NULL, DEFAULT, DEFAULT, DEFAULT);
		
COMMIT;


UPDATE "MEMBER"
SET
	 "MEMBER_PW" = '$2a$10$m1sZd3JwzvcUyQukOiXrHOsie0s7RSvqpWLMATGy4RhyJ2DHOb47q'
WHERE
	"MEMBER_NO" = 13;

DELETE
FROM CHATROOM
WHERE CHATROOM_NO = '5';

DELETE
FROM "MEMBER"
WHERE MEMBER_NO = '17';

DELETE
FROM "FOLLOW"
WHERE FOLLOWING_MEMBER = 2
AND FOLLOWER_MEMBER = 13;


CREATE SEQUENCE SEQ_NOTI_NO NOCACHE;



		SELECT 
			NOTIFICATION_NO, 
			NOTIFICATION_CONTENT, 
			NOTIFICATION_URL, 
			PROFILE_IMG AS SEND_MEMBER_PROFILE_IMG, 
			SEND_MEMBER_NO, 
			RECEIVE_MEMBER_NO,
			NOTIFICATION_CHECK,
			CASE 
				WHEN TRUNC("NOTIFICATION".CREATED_AT) = TRUNC(CURRENT_DATE) THEN TO_CHAR("NOTIFICATION".CREATED_AT, 'AM HH:MI')
				ELSE TO_CHAR("NOTIFICATION".CREATED_AT, 'YYYY-MM-DD')
			END AS CREATED_AT
		FROM "NOTIFICATION"
		JOIN "MEMBER" ON (SEND_MEMBER_NO = MEMBER_NO)
		WHERE RECEIVE_MEMBER_NO = 13
		ORDER BY NOTIFICATION_NO DESC;



	
		INSERT INTO "NOTIFICATION"(
			NOTIFICATION_NO,
			NOTIFICATION_CONTENT,
			NOTIFICATION_URL,
			SEND_MEMBER_NO,
			RECEIVE_MEMBER_NO
			)
		
		VALUES(
			SEQ_NOTI_NO.NEXTVAL,
			'메시지 도착',
			'ㄴㅇㅎㄴㅇㅎ',
			2,
			3);
		
		
    SELECT CASE 
        WHEN EXISTS (
            SELECT 1
            FROM "NOTIFICATION"
            WHERE RECEIVE_MEMBER_NO = 13
            AND NOTIFICATION_CHECK = 'N'
        ) THEN 'ture'
        ELSE 'false'
    END AS hasUnread
    FROM DUAL;
   
   
   SELECT *
	FROM FOLLOW
	WHERE FOLLOWING_MEMBER = 13
	AND FOLLOWER_MEMBER = 2;

DELETE
FROM FOLLOW
WHERE FOLLOWING_MEMBER = 13;

INSERT INTO REPORT
VALUES(/*SEQ_REPORT_NO.NEXTVAL*/ '22',
			 '2', DEFAULT, '스캠, 사기 또는 스팸', 'N', 
			 '27', '1');
			
INSERT INTO REPORT
VALUES(/*SEQ_REPORT_NO.NEXTVAL*/ '21',
			 '2', DEFAULT, '마음에 들지 않습니다', 'N', 
			 '4', '2');
			
COMMIT;

UPDATE BOARD
SET BOARD_DEL_FL = 'N'
WHERE BOARD_NO = '27';

UPDATE "COMMENT"
SET COMMENT_DEL_FL = 'N'
WHERE COMMENT_NO = '27';

		SELECT CASE 
		    WHEN EXISTS (
		    
		        SELECT 1
		        FROM "NOTIFICATION"
		        WHERE NOTIFICATION_CHECK = 'N'
		        AND RECEIVE_MEMBER_NO = 2
		        
		    ) THEN 'true'
		    ELSE 'false'
		END AS hasUnread
		FROM DUAL;





-- 27번 게시글 회원 번호
SELECT MEMBER_NO
FROM 	"BOARD"
WHERE BOARD_NO = '27'; -- 2번회원

-- 4번 댓글 회원 번호
SELECT MEMBER_NO
FROM 	"COMMENT"
WHERE COMMENT_NO = '4'; -- 1번회원


-- 22번 신고글의 카테고리(1:피드, 2:댓글)
SELECT *
FROM "REPORT"
WHERE REPORT_NO = 22;



-- 22번 신고 글 또는 댓글을 작성한 회원의 번호를 조회
SELECT 
	CASE
		WHEN CONTENT_CATEGORY = 1
		THEN 
			(SELECT MEMBER_NO
				FROM 	"BOARD" SUB1
				WHERE SUB1.BOARD_NO = MAIN.CONTENT_NO)
		
		ELSE 
			(SELECT MEMBER_NO
				FROM 	"COMMENT" SUB2
				WHERE SUB2.COMMENT_NO = MAIN.CONTENT_NO)
	END AS MEMBER_NO

FROM 
	(SELECT *
	FROM "REPORT"
	WHERE REPORT_NO = 22) MAIN
;


			
DELETE
FROM REPORT
WHERE MEMBER_NO= 2;

COMMIT;
		
		
		
		
CREATE TABLE "MEMBER" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MEMBER_EMAIL"	VARCHAR2(50)		NOT NULL,
	"MEMBER_ID"	VARCHAR2(20)		NOT NULL,
	"MEMBER_PW"	VARCHAR2(150)		NOT NULL,
	"MEMBER_NICKNAME"	VARCHAR2(30)		NOT NULL,
	"MEMBER_NAME"	VARCHAR2(10)		NOT NULL,
	"PROFILE_IMG"	VARCHAR2(300)		NULL,
	"CREATED_AT"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"MEMBER_DEL_BAN_FL"	CHAR(1)	DEFAULT 1	NOT NULL,
	"MEMBER_BIRTH"	DATE		NULL,
	"SELF_INTRODUCTION"	VARCHAR2(1000)		NULL,
	"MEMBER_DISCLOSURE_SCOPE"	NUMBER	DEFAULT 1	NOT NULL,
	"ADMIN"	CHAR(1)	DEFAULT 1	NOT NULL,
	"REPORT_COUNT"	NUMBER	DEFAULT 0	NOT NULL
);

COMMENT ON COLUMN "MEMBER"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MEMBER"."MEMBER_EMAIL" IS '회원 이메일';

COMMENT ON COLUMN "MEMBER"."MEMBER_ID" IS '회원 아이디';

COMMENT ON COLUMN "MEMBER"."MEMBER_PW" IS '회원 비밀번호(암호화)';

COMMENT ON COLUMN "MEMBER"."MEMBER_NICKNAME" IS '회원명(별명)';

COMMENT ON COLUMN "MEMBER"."MEMBER_NAME" IS '회원이름';

COMMENT ON COLUMN "MEMBER"."PROFILE_IMG" IS '프로필 이미지';

COMMENT ON COLUMN "MEMBER"."CREATED_AT" IS '가입일';

COMMENT ON COLUMN "MEMBER"."MEMBER_DEL_BAN_FL" IS '탈퇴/정지 여부 ( 1: 정상, 2: 탈퇴, 3: 정지 )';

COMMENT ON COLUMN "MEMBER"."MEMBER_BIRTH" IS '생년월일';

COMMENT ON COLUMN "MEMBER"."SELF_INTRODUCTION" IS '자기소개';

COMMENT ON COLUMN "MEMBER"."MEMBER_DISCLOSURE_SCOPE" IS '공개(1:공개, 2: 비공개)';

COMMENT ON COLUMN "MEMBER"."ADMIN" IS '1 : 일반, 2: 관리자';

COMMENT ON COLUMN "MEMBER"."REPORT_COUNT" IS '경고 누적 횟수';

CREATE TABLE "BOARD" (
	"BOARD_NO"	NUMBER		NOT NULL,
	"BOARD_CONTENT"	VARCHAR2(4000)		NULL,
	"READ_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"CREATED_AT"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"MODIFIED_AT"	DATE		NULL,
	"BOARD_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "BOARD"."BOARD_NO" IS '피드 번호(SEQ_BOARD_NO)';

COMMENT ON COLUMN "BOARD"."BOARD_CONTENT" IS '피드 내용';

COMMENT ON COLUMN "BOARD"."READ_COUNT" IS '조회수';

COMMENT ON COLUMN "BOARD"."CREATED_AT" IS '피드 작성일';

COMMENT ON COLUMN "BOARD"."MODIFIED_AT" IS '마지막 수정일';

COMMENT ON COLUMN "BOARD"."BOARD_DEL_FL" IS '삭제 여부(N,Y)';

COMMENT ON COLUMN "BOARD"."MEMBER_NO" IS '작성자 회원 번호';

CREATE TABLE "BOARD_IMG" (
	"IMG_NO"	NUMBER		NOT NULL,
	"IMG_PATH"	VARCHAR2(200)		NOT NULL,
	"IMG_RENAME"	NVARCHAR2(50)		NOT NULL,
	"IMG_ORDER"	NUMBER		NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "BOARD_IMG"."IMG_NO" IS '이미지 번호(SEQ_IMG_NO)';

COMMENT ON COLUMN "BOARD_IMG"."IMG_PATH" IS '이미지 요청 경로';

COMMENT ON COLUMN "BOARD_IMG"."IMG_RENAME" IS '이미지 변경명';

COMMENT ON COLUMN "BOARD_IMG"."IMG_ORDER" IS '이미지 순서';

COMMENT ON COLUMN "BOARD_IMG"."BOARD_NO" IS '이미지가 첨부된 게시글 번호';

CREATE TABLE "COMMENT" (
	"COMMENT_NO"	NUMBER		NOT NULL,
	"COMMENT_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"CREATED_AT"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"MODIFIED_AT"	DATE		NULL,
	"COMMENT_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"PARENT_COMMENT_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "COMMENT"."COMMENT_NO" IS '댓글 번호(SEQ_COMMENT_NO)';

COMMENT ON COLUMN "COMMENT"."COMMENT_CONTENT" IS '댓글 내용';

COMMENT ON COLUMN "COMMENT"."CREATED_AT" IS '댓글 작성일';

COMMENT ON COLUMN "COMMENT"."MODIFIED_AT" IS '댓글 마지막 수정 날짜';

COMMENT ON COLUMN "COMMENT"."COMMENT_DEL_FL" IS '댓글 삭제 여부(N,Y)';

COMMENT ON COLUMN "COMMENT"."BOARD_NO" IS '게시글 번호(SEQ_BOARD_NO)';

COMMENT ON COLUMN "COMMENT"."MEMBER_NO" IS '회원번호';

COMMENT ON COLUMN "COMMENT"."PARENT_COMMENT_NO" IS '부모 댓글 번호';

CREATE TABLE "NOTIFICATION" (
	"NOTIFICATION_NO"	NUMBER		NOT NULL,
	"NOTIFICATION_CONTENT"	VARCHAR2(1000)		NOT NULL,
	"NOTIFICATION_CHECK"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"CREATED_AT"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"NOTIFICATION_URL"	VARCHAR2(1000)		NOT NULL,
	"SEND_MEMBER_NO"	NUMBER		NOT NULL,
	"RECEIVE_MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "NOTIFICATION"."NOTIFICATION_NO" IS '알림 번호(SEQ_NOTIFICATION_NO)';

COMMENT ON COLUMN "NOTIFICATION"."NOTIFICATION_CONTENT" IS '알림내용';

COMMENT ON COLUMN "NOTIFICATION"."NOTIFICATION_CHECK" IS '읽음 여부(Y,N)';

COMMENT ON COLUMN "NOTIFICATION"."CREATED_AT" IS '알림 생성 시간';

COMMENT ON COLUMN "NOTIFICATION"."NOTIFICATION_URL" IS '연결페이지 주소';

COMMENT ON COLUMN "NOTIFICATION"."SEND_MEMBER_NO" IS '알림보낸회원번호';

COMMENT ON COLUMN "NOTIFICATION"."RECEIVE_MEMBER_NO" IS '알림받는회원번호';

CREATE TABLE "BOARD_LIKE" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "BOARD_LIKE"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "BOARD_LIKE"."BOARD_NO" IS '피드 번호(SEQ_BOARD_NO)';

CREATE TABLE "CHATROOM" (
	"CHATROOM_NO"	NUMBER		NOT NULL,
	"CREATED_AT"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"OPEN_MEMBER"	NUMBER		NOT NULL,
	"PARTICIPANT"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "CHATROOM"."CHATROOM_NO" IS '채팅방 번호(SEQ_CHATROOM_NO';

COMMENT ON COLUMN "CHATROOM"."CREATED_AT" IS '채팅방 생성일';

COMMENT ON COLUMN "CHATROOM"."OPEN_MEMBER" IS '개설자 회원 번호';

COMMENT ON COLUMN "CHATROOM"."PARTICIPANT" IS '참여자 회원 번호';

CREATE TABLE "MESSAGE" (
	"MESSAGE_NO"	NUMBER		NOT NULL,
	"MESSAGE_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"READ_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"SEND_TIME"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"CHATROOM_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "MESSAGE"."MESSAGE_NO" IS '메시지 번호(SEQ_MESSAGE_NO)';

COMMENT ON COLUMN "MESSAGE"."MESSAGE_CONTENT" IS '메시지 내용';

COMMENT ON COLUMN "MESSAGE"."READ_FL" IS '읽음 여부(Y,N)';

COMMENT ON COLUMN "MESSAGE"."SEND_TIME" IS '메시지 보낸 시간';

COMMENT ON COLUMN "MESSAGE"."MEMBER_NO" IS '회원번호';

COMMENT ON COLUMN "MESSAGE"."CHATROOM_NO" IS '채팅방 번호(SEQ_CHATROOM_NO';

CREATE TABLE "REPORT" (
	"REPORT_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"CREATED_AT"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"REPORT_CATEGORY"	NVARCHAR2(300)		NOT NULL,
	"REPORT_VIEW"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"CONTENT_NO"	NUMBER		NOT NULL,
	"CONTENT_CATEGORY"	CHAR(1)		NOT NULL
);

COMMENT ON COLUMN "REPORT"."REPORT_NO" IS '신고 번호(SEQ_REPORT_NO)';

COMMENT ON COLUMN "REPORT"."MEMBER_NO" IS '회원번호';

COMMENT ON COLUMN "REPORT"."CREATED_AT" IS '신고 날짜';

COMMENT ON COLUMN "REPORT"."REPORT_CATEGORY" IS '신고 사유 카테고리';

COMMENT ON COLUMN "REPORT"."REPORT_VIEW" IS '신고 처리 여부(N,Y)';

COMMENT ON COLUMN "REPORT"."CONTENT_NO" IS '피드 / 댓글 번호';

COMMENT ON COLUMN "REPORT"."CONTENT_CATEGORY" IS '1: 피드, 2: 댓글';

CREATE TABLE "COMMENT_LIKE" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"COMMENT_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "COMMENT_LIKE"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "COMMENT_LIKE"."COMMENT_NO" IS '댓글 번호(SEQ_COMMENT_NO)';

CREATE TABLE "BAN" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"CREATED_AT"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"BAN_TERM"	NUMBER		NOT NULL,
	"BAN_REASON"	NVARCHAR2(300)		NOT NULL
);

COMMENT ON COLUMN "BAN"."MEMBER_NO" IS '정지당한 회원 번호';

COMMENT ON COLUMN "BAN"."CREATED_AT" IS '정지 날짜';

COMMENT ON COLUMN "BAN"."BAN_TERM" IS '정지 기간';

COMMENT ON COLUMN "BAN"."BAN_REASON" IS '정지 사유';

CREATE TABLE "BLOCK" (
	"BLOCK_MEMBER"	NUMBER		NOT NULL,
	"BLOCKED_MEMBER"	NUMBER		NOT NULL,
	"CREATED_AT"	DATE	DEFAULT CURRENT_DATE	NOT NULL
);

COMMENT ON COLUMN "BLOCK"."BLOCK_MEMBER" IS '차단을 한 회원';

COMMENT ON COLUMN "BLOCK"."BLOCKED_MEMBER" IS '차단을 당한 회원';

COMMENT ON COLUMN "BLOCK"."CREATED_AT" IS '차단한 날짜';

CREATE TABLE "FOLLOW" (
	"FOLLOWING_MEMBER"	NUMBER		NOT NULL,
	"FOLLOWER_MEMBER"	NUMBER		NOT NULL,
	"CREATED_AT"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"CONFIRM"	CHAR(1)	DEFAULT 1	NOT NULL
);

COMMENT ON COLUMN "FOLLOW"."FOLLOWING_MEMBER" IS '팔로우 하는 회원';

COMMENT ON COLUMN "FOLLOW"."FOLLOWER_MEMBER" IS '팔로잉 회원';

COMMENT ON COLUMN "FOLLOW"."CREATED_AT" IS '팔로우한 날짜';

COMMENT ON COLUMN "FOLLOW"."CONFIRM" IS '1: 팔로우 2: 비공개 계정일때 기본값으로 사용할 것';

CREATE TABLE "STORY" (
	"STORY_NO"	NUMBER		NOT NULL,
	"IMG_PATH"	VARCHAR2(200)		NULL,
	"CREATED_AT"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"MODIFIED_AT"	DATE		NULL,
	"STORY_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"READ_COUNT"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "STORY"."STORY_NO" IS '스토리 번호(SEQ_STORY_NO)';

COMMENT ON COLUMN "STORY"."IMG_PATH" IS '이미지 요청 경로';

COMMENT ON COLUMN "STORY"."CREATED_AT" IS '스토리 생성날짜';

COMMENT ON COLUMN "STORY"."MODIFIED_AT" IS '스토리 수정날짜';

COMMENT ON COLUMN "STORY"."STORY_DEL_FL" IS '스토리 삭제 여부(Y,N)';

COMMENT ON COLUMN "STORY"."READ_COUNT" IS '스토리 조회수';

COMMENT ON COLUMN "STORY"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

CREATE TABLE "MARK" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "MARK"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MARK"."BOARD_NO" IS '피드 번호(SEQ_BOARD_NO)';

CREATE TABLE "STORY_LIKE" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"STORY_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "STORY_LIKE"."MEMBER_NO" IS '회원번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "STORY_LIKE"."STORY_NO" IS '스토리 번호(SEQ_STORY_NO)';

CREATE TABLE "HASHTAG" (
	"TAG_NAME"	VARCHAR2(60)		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "HASHTAG"."TAG_NAME" IS '태그명';

COMMENT ON COLUMN "HASHTAG"."BOARD_NO" IS '피드 번호(SEQ_BOARD_NO)';

CREATE TABLE "STORY_READ" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"STORY_NO"	NUMBER		NOT NULL,
	"CREATE_AT"	DATE	DEFAULT CURRENT_DATE	NOT NULL
);

COMMENT ON COLUMN "STORY_READ"."MEMBER_NO" IS '스토리를 읽은 회원';

COMMENT ON COLUMN "STORY_READ"."STORY_NO" IS '읽은 스토리';

COMMENT ON COLUMN "STORY_READ"."CREATE_AT" IS '스토리 읽은 날짜';

ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "BOARD" ADD CONSTRAINT "PK_BOARD" PRIMARY KEY (
	"BOARD_NO"
);

ALTER TABLE "BOARD_IMG" ADD CONSTRAINT "PK_BOARD_IMG" PRIMARY KEY (
	"IMG_NO"
);

ALTER TABLE "COMMENT" ADD CONSTRAINT "PK_COMMENT" PRIMARY KEY (
	"COMMENT_NO"
);

ALTER TABLE "NOTIFICATION" ADD CONSTRAINT "PK_NOTIFICATION" PRIMARY KEY (
	"NOTIFICATION_NO"
);

ALTER TABLE "BOARD_LIKE" ADD CONSTRAINT "PK_BOARD_LIKE" PRIMARY KEY (
	"MEMBER_NO",
	"BOARD_NO"
);

ALTER TABLE "CHATROOM" ADD CONSTRAINT "PK_CHATROOM" PRIMARY KEY (
	"CHATROOM_NO"
);

ALTER TABLE "MESSAGE" ADD CONSTRAINT "PK_MESSAGE" PRIMARY KEY (
	"MESSAGE_NO"
);

ALTER TABLE "REPORT" ADD CONSTRAINT "PK_REPORT" PRIMARY KEY (
	"REPORT_NO"
);

ALTER TABLE "COMMENT_LIKE" ADD CONSTRAINT "PK_COMMENT_LIKE" PRIMARY KEY (
	"MEMBER_NO",
	"COMMENT_NO"
);

ALTER TABLE "BAN" ADD CONSTRAINT "PK_BAN" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "STORY" ADD CONSTRAINT "PK_STORY" PRIMARY KEY (
	"STORY_NO"
);

ALTER TABLE "MARK" ADD CONSTRAINT "PK_MARK" PRIMARY KEY (
	"MEMBER_NO",
	"BOARD_NO"
);

ALTER TABLE "STORY_LIKE" ADD CONSTRAINT "PK_STORY_LIKE" PRIMARY KEY (
	"MEMBER_NO",
	"STORY_NO"
);

ALTER TABLE "HASHTAG" ADD CONSTRAINT "PK_HASHTAG" PRIMARY KEY (
	"TAG_NAME",
	"BOARD_NO"
);

ALTER TABLE "STORY_READ" ADD CONSTRAINT "PK_STORY_READ" PRIMARY KEY (
	"MEMBER_NO",
	"STORY_NO"
);

ALTER TABLE "BOARD" ADD CONSTRAINT "FK_MEMBER_TO_BOARD_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "BOARD_IMG" ADD CONSTRAINT "FK_BOARD_TO_BOARD_IMG_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
);

ALTER TABLE "COMMENT" ADD CONSTRAINT "FK_BOARD_TO_COMMENT_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
);

ALTER TABLE "COMMENT" ADD CONSTRAINT "FK_MEMBER_TO_COMMENT_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "COMMENT" ADD CONSTRAINT "FK_COMMENT_TO_COMMENT_1" FOREIGN KEY (
	"PARENT_COMMENT_NO"
)
REFERENCES "COMMENT" (
	"COMMENT_NO"
);

ALTER TABLE "NOTIFICATION" ADD CONSTRAINT "FK_MEMBER_TO_NOTIFICATION_1" FOREIGN KEY (
	"SEND_MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "NOTIFICATION" ADD CONSTRAINT "FK_MEMBER_TO_NOTIFICATION_2" FOREIGN KEY (
	"RECEIVE_MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "BOARD_LIKE" ADD CONSTRAINT "FK_MEMBER_TO_BOARD_LIKE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "BOARD_LIKE" ADD CONSTRAINT "FK_BOARD_TO_BOARD_LIKE_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
);

ALTER TABLE "CHATROOM" ADD CONSTRAINT "FK_MEMBER_TO_CHATROOM_1" FOREIGN KEY (
	"OPEN_MEMBER"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "CHATROOM" ADD CONSTRAINT "FK_MEMBER_TO_CHATROOM_2" FOREIGN KEY (
	"PARTICIPANT"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "MESSAGE" ADD CONSTRAINT "FK_MEMBER_TO_MESSAGE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "MESSAGE" ADD CONSTRAINT "FK_CHATROOM_TO_MESSAGE_1" FOREIGN KEY (
	"CHATROOM_NO"
)
REFERENCES "CHATROOM" (
	"CHATROOM_NO"
);

ALTER TABLE "REPORT" ADD CONSTRAINT "FK_MEMBER_TO_REPORT_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "COMMENT_LIKE" ADD CONSTRAINT "FK_MEMBER_TO_COMMENT_LIKE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "COMMENT_LIKE" ADD CONSTRAINT "FK_COMMENT_TO_COMMENT_LIKE_1" FOREIGN KEY (
	"COMMENT_NO"
)
REFERENCES "COMMENT" (
	"COMMENT_NO"
);

ALTER TABLE "BAN" ADD CONSTRAINT "FK_MEMBER_TO_BAN_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "BLOCK" ADD CONSTRAINT "FK_MEMBER_TO_BLOCK_1" FOREIGN KEY (
	"BLOCK_MEMBER"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "BLOCK" ADD CONSTRAINT "FK_MEMBER_TO_BLOCK_2" FOREIGN KEY (
	"BLOCKED_MEMBER"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "FOLLOW" ADD CONSTRAINT "FK_MEMBER_TO_FOLLOW_1" FOREIGN KEY (
	"FOLLOWING_MEMBER"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "FOLLOW" ADD CONSTRAINT "FK_MEMBER_TO_FOLLOW_2" FOREIGN KEY (
	"FOLLOWER_MEMBER"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "STORY" ADD CONSTRAINT "FK_MEMBER_TO_STORY_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "MARK" ADD CONSTRAINT "FK_MEMBER_TO_MARK_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "MARK" ADD CONSTRAINT "FK_BOARD_TO_MARK_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
);

ALTER TABLE "STORY_LIKE" ADD CONSTRAINT "FK_MEMBER_TO_STORY_LIKE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "STORY_LIKE" ADD CONSTRAINT "FK_STORY_TO_STORY_LIKE_1" FOREIGN KEY (
	"STORY_NO"
)
REFERENCES "STORY" (
	"STORY_NO"
);

ALTER TABLE "HASHTAG" ADD CONSTRAINT "FK_BOARD_TO_HASHTAG_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
);

ALTER TABLE "STORY_READ" ADD CONSTRAINT "FK_MEMBER_TO_STORY_READ_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "STORY_READ" ADD CONSTRAINT "FK_STORY_TO_STORY_READ_1" FOREIGN KEY (
	"STORY_NO"
)
REFERENCES "STORY" (
	"STORY_NO"
);


		
		