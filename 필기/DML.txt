*** DML(Data Manipulation Language) : 데이터 조작 언어

-- 테이블에 값을 삽입하거나(INSERT), 수정하거나(UPDATE), 삭제(DELETE)하는 구문
-- SELECT도 DML에 포함되긴 하지만 DQL이라는 것으로 분리해서 보기도 한다
	--> DQL(Date Query Language : 데이터 질의 언어)

-- 주의 : 혼자서 COMMIT, ROLLBACK 하지 말것!

-- 테스트용 테이블 생성
CREATE TABLE 테이블 명 AS SELECT * FROM EMPLOYEE;
CREATE TABLE 테이블 명 AS SELECT * FROM DEPARTMENT;

SELECT * FROM EMPLOYEE2;
SELECT * FROM DEPARTMENT2;

--------------------------------------------------------------------------------------------------------------------

-- 1. INSERT

  -- 테이블에 새로운 행을 추가하는 구문
  1)  INSERT INTO 테이블명 VALUES(데이터, 데이터, ...)
  -- 테이블에 모든 컬럼에 대한 값을 INSERT할 때 사용
  -- INSERT하고자 하는 컬럼이 모든 컬럼인 경우 컬럼명 생략 가능. 
  -- 단, 컬럼의 순서를 지켜서 VALUES에 값을 기입해야 함

      *****
      INSERT INTO 테이블명
      VALUES(모든 컬럼에 추가할 값);


  2)  INSERT INTO 테이블명(컬럼명, 컬럼명, 컬럼명,...)
  -- VALUES (데이터1, 데이터2, 데이터3, ...);
  -- 테이블에 내가 선택한 컬럼에 대한 값만 INSERT할 때 사용
  -- 선택안된 컬럼은 값이 NULL이 들어감

      *****
      INSERT INTO 테이블명 (컬럼1, 컬럼2, ...)
      VALUES(컬럼1 값, 컬럼2 값, ....)


-- 2. UPDATE

  -- 테이블에 기록된 컬럼의 값을 수정하는 구문

  -- [작성법]
  -- UPDATE 테이블명 
    SET 컬럼명 = 바꿀값 [WHERE 컬럼명 비교연산자 비교값];


  * UPDATE시에도 서브쿼리를 사용 가능

    -- [작성법]
    -- UPDATE 테이블명
    -- SET 컬럼명 = 수정할 값(서브쿼리),
                    ....
       WHERE
            수정하려는 행을 찾는 조건;


  3. MERGE(병합) (참고만 하세요!)

  -- 구조가 같은 두 개의 테이블을 하나로 합치는 기능.
  -- 테이블에서 지정하는 조건의 값이 존재하면 UPDATE
  -- 조건의 값이 없으면 INSERT됨


  4. DELETE
    -- 테이블의 행을 삭제하는 구문

    -- [작성법]
    -- DELTE FROM 테이블명 WHERE 조건설정
    -- 만약 WHERE 조건을 설정하지 않으면 모든 행이 다 삭제됨

    DELETE
    FROM 테이블 명
    WHERE 조건 = 조건설정;